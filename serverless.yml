service: realworld-aws-lambda-dynamodb-go

frameworkVersion: '>=1.28.0 <2.0.0'

provider:
  name: aws
  runtime: go1.x
  region: eu-west-1
  environment:
    STAGE: ${opt:stage, "dev"}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/*"

package:
  exclude:
    - ./**
  include:
    - ./bin/**

functions:

  users-post:
    handler: bin/users-post
    events:
      - http:
          path: users
          method: post
          cors: true

  users-login-post:
    handler: bin/users-login-post
    events:
      - http:
          path: users/login
          method: post
          cors: true

  user-get:
    handler: bin/user-get
    events:
      - http:
          path: user
          method: get
          cors: true

  user-put:
    handler: bin/user-put
    events:
      - http:
          path: user
          method: put
          cors: true

resources:
  Resources:
    UserTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: realworld-${self:provider.environment.STAGE}-user
        AttributeDefinitions:
          - AttributeName: Username
            AttributeType: S
        KeySchema:
          - AttributeName: Username
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    EmailUserTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: realworld-${self:provider.environment.STAGE}-email-user
        AttributeDefinitions:
          - AttributeName: Email
            AttributeType: S
        KeySchema:
          - AttributeName: Email
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
